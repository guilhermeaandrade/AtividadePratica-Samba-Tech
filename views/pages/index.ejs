<!DOCTYPE html>
<html>
	<head>
	  	<% include ../partition/header.ejs %>
	</head>

	<body>
		<div class="container">
      <div class="header clearfix">
        <h2 class="text-muted">AppVideoConverter</h2>
      </div>

			<div class="jumbotron">
				 <h2>Converte Videos</h2>
				 <p class="lead">Aplicação Web que possibilita a conversão de arquivos de video de um formato
					 específico, não compatível com os padrões da web, para um formato que seja compatível com os padrões da web.</p>
				 <br />
				 <form method="POST" action="/success">
					  <div class="form-group">
					    <label for="file_input" class="control-label">Selecione um arquivo:</label>
					    <input type="file" id="file_input" class="file" data-show-preview="false">
					  </div>
					  <button type="submit" class="btn btn-primary">Converter Video</button>
				</form>
			</div>
			<div class="jumbotron">
				<h2>Assistir Video</h2>
				<p class="lead">Possibilita a visualização dos videos após sua conversão para um formato padrão da web.</p>
				<center>
					<video width="640" height="480" controls="controls" autoplay="autoplay">
				 			<source src="/files/teste.mp4" type="video/mp4">
							<object data="" width="640" height="480">
									<embed width="640" height="480" src="/files/teste.mp4">
							</object>
					</video>
				</center>
		 </div>
	 </div>
	 <br /><br />
	 <script>
			(function() {
	    	document.getElementById("file_input").onchange = function(){
		        var files = document.getElementById("file_input").files;
						var file = files[0];
						if(file == null){
		            alert("Nenhum arquivo foi selecionado.");
		        }
		        else{
		            getRequestToUploadFile(file);
		        }
	    	};
			})();

			function getRequestToUploadFile(file){
			    var xhr = new XMLHttpRequest();
			    xhr.open("GET", "/sign_s3?file_name="+file.name+"&file_type="+file.type);
					xhr.onreadystatechange = function(){
			        if(xhr.readyState === 4){
			            if(xhr.status === 200){
					            var response = JSON.parse(xhr.responseText);
											console.log("response: "+response);
											console.log("file: "+file);
											console.log("sig: "+response.signed_request+"-"+response.url);
					            uploadFile(file, response.signed_request, response.url);
			            }
			            else{
			                alert("Não foi possível obter URL para upload");
			            }
			        }
			    };
			    xhr.send();
			}

			function uploadFile(file, signed_request, url){
			    var xhr = new XMLHttpRequest();
					console.log("signed_request: "+signed_request);
			    xhr.open("PUT", signed_request);
			    xhr.setRequestHeader('x-amz-acl', 'public-read');
			    xhr.onload = function() {
			        if (xhr.status === 200) {

			        }
			    };
			    xhr.onerror = function() {
			        alert("Upload do arquivo não pode ser realizado.");
			    };
			    xhr.send(file);
			}
	 </script>

	 <script>
			function playPause(){
				if (video.paused)
				  video.play();
				else
				  video.pause();
			}

			function grande(){
				video.width=560;
			}

			function pequeno(){
				video.width=320;
			}

			function normal(){
				video.width=420;
			}
	 </script>
	</body>
</html>
